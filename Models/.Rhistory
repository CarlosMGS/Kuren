library(RODBC)
library(dplyr)
library(stats)
#liberamos memoria
rm(list = ls())
gc()
#conexiÃ³n con la base de datos
con <- odbcDriverConnect("driver={SQL Server Native Client 11.0};Server=min-serv.database.windows.net ; Database=Mineria;Uid=usuariomin; Pwd=dctaMineria5")
#query para traer los datos de trabajo
data <- sqlQuery(con, "select comunidad, n_year, flow, age, id_com, dim_companies.class as com_type, quantity, id_edu, edu_ach, dim_edu_achieved.perc as edu_perc,
id_pov, dim_poverty.class as pov_type, dim_poverty.perc as pov_perc
from facts_migration left join dim_companies on (facts_migration.id_com = dim_companies.id_c)
left join dim_edu_achieved on (facts_migration.id_edu = dim_edu_achieved.id_e)
left join dim_poverty on (facts_migration.id_pov = dim_poverty.id_p)")
#hacemos una copia para trabajar
mig <- data
#eliminamos ids
mig <- mig[,-5]
mig <- mig[,-7]
mig <- mig[,-9]
#cambiamos los NA por -1 para que funcione
for(i in 1:length(mig2)){
mig2[is.na(mig2[,i]), i] <- -1
}
library(RODBC)
library(dplyr)
library(stats)
#liberamos memoria
rm(list = ls())
gc()
#conexiÃ³n con la base de datos
con <- odbcDriverConnect("driver={SQL Server Native Client 11.0};Server=min-serv.database.windows.net ; Database=Mineria;Uid=usuariomin; Pwd=dctaMineria5")
#query para traer los datos de trabajo
data <- sqlQuery(con, "select comunidad, n_year, flow, age, id_com, dim_companies.class as com_type, quantity, id_edu, edu_ach, dim_edu_achieved.perc as edu_perc,
id_pov, dim_poverty.class as pov_type, dim_poverty.perc as pov_perc
from facts_migration left join dim_companies on (facts_migration.id_com = dim_companies.id_c)
left join dim_edu_achieved on (facts_migration.id_edu = dim_edu_achieved.id_e)
left join dim_poverty on (facts_migration.id_pov = dim_poverty.id_p)")
#hacemos una copia para trabajar
mig <- data
library(RODBC)
library(dplyr)
library(stats)
#liberamos memoria
rm(list = ls())
gc()
#conexiÃ³n con la base de datos
con <- odbcDriverConnect("driver={SQL Server Native Client 11.0};Server=min-serv.database.windows.net ; Database=Mineria;Uid=usuariomin; Pwd=dctaMineria5")
#query para traer los datos de trabajo
data <- sqlQuery(con, "select *
from facts_migration left join dim_companies on (facts_migration.id_com = dim_companies.id_c)
left join dim_edu_achieved on (facts_migration.id_edu = dim_edu_achieved.id_e)
left join dim_poverty on (facts_migration.id_pov = dim_poverty.id_p)")
#hacemos una copia para trabajar
mig <- data
View(mig)
#eliminamos ids
mig <- mig[,-1]
mig <- mig[,-5]
mig <- mig[,-5]
mig <- mig[,-5]
mig <- mig[,-23]
#conexiÃ³n con la base de datos
con <- odbcDriverConnect("driver={SQL Server Native Client 11.0};Server=min-serv.database.windows.net ; Database=Mineria;Uid=usuariomin; Pwd=dctaMineria5")
#query para traer los datos de trabajo
data <- sqlQuery(con, "select *
from facts_migration left join dim_companies on (facts_migration.id_com = dim_companies.id_c)
left join dim_edu_achieved on (facts_migration.id_edu = dim_edu_achieved.id_e)
left join dim_poverty on (facts_migration.id_pov = dim_poverty.id_p)")
#hacemos una copia para trabajar
mig <- data
#eliminamos ids
mig <- mig[,-1]
mig <- mig[,-5]
mig <- mig[,-5]
mig <- mig[,-5]
mig <- mig[,-5]
mig <- mig[,-22]
mig <- mig[,-14]
#cambiamos los NA por -1 para que funcione
for(i in 1:length(mig)){
mig[is.na(mig[,i]), i] <- -1
}
cor(mig$comunidad, mig$flow)
cor(as.numeric(mig$comunidad), mig$flow)
cor(as.numeric(mig$comunidad), mig$age)
cor(as.numeric(mig$comunidad), mig$anonima)
cor(as.numeric(mig$flow), mig$anonima)
cor(as.numeric(mig$flow), mig$autonomos)
cor(as.numeric(mig$flow), mig$personas)
cor(as.numeric(mig$flow), mig$coop)
cor(as.numeric(mig$flow), mig$resp_limit)
cor(as.numeric(mig$comanditaria), mig$autonomos)
cor(mig$flow, mig$autonomos)
cor(mig$flow, mig$analfabets)
cor(mig$flow, mig$hog_baja_int)
cor(mig$flow, mig$car_material)
andalusia18 <- mig[mig$comunidad=="Andalucía", 3]
andalusia30 <- mig[mig$comunidad=="Andalucía" && mig$age == 30, 3]
andalusia30 <- mig[mig$comunidad=="Andalucía" && mig$age == "30", 3]
